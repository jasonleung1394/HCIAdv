//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.FrankaPositionServo
{
    [Serializable]
    public class RobotStateMsg : Message
    {
        public const string k_RosMessageName = "franka_position_servo/RobotState";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public double[] cartesian_collision;
        public double[] cartesian_contact;
        public double[] O_dP_EE;
        //  EE vel computed as J*dq
        //  float64[7] q # joint position, velocity, and effort in joint_states topic
        //  float64[7] dq
        public double[] q_d;
        public double[] dq_d;
        //  float64[7] tau_J
        public double[] dtau_J;
        //  torque derivative
        public double[] tau_J_d;
        //  desired joint torque
        //  float64[6] K_F_ext_hat_K
        //  float64[2] elbow
        //  float64[2] elbow_d
        public double[] joint_collision;
        public double[] joint_contact;
        //  float64[6] O_F_ext_hat_K # in tip state
        public double[] tau_ext_hat_filtered;
        //  filtered external torque
        public double[] F_x_Cee;
        //  Configured center of mass of the end effector load with respect to flange frame.
        public double[] F_x_Cload;
        //  Configured center of mass of the external load with respect to flange frame.
        public double[] F_x_Ctotal;
        //  Combined center of mass of the end effector load and the external load with respect to flange frame.
        public double[] I_ee;
        //  Configured rotational inertia matrix of the end effector load with respect to center of mass.
        public double[] I_load;
        public double[] I_total;
        public double m_ee;
        //  configured mass of end-effector
        public double m_load;
        //  configured mass of external load
        public double m_total;
        public double[] gravity;
        public double[] coriolis;
        public double[] mass_matrix;
        //  mass matrix of end-effector wrt base frame # Vectorized 7x7, column-major
        public double[] O_Jac_EE;
        //  zero jacobian of end-effector frame. Vectorized 6x7 Jacobian, column-major
        //  float64[16] O_T_EE # ----- in tip state # Vectorized 4x4, column-major
        public double[] O_T_EE_d;
        //  Last desired end effector pose of motion generation in base frame.  # Vectorized 4x4, column-major
        public double[] F_T_EE;
        //  End effector frame pose in flange frame # Vectorized 4x4, column-major
        public double[] EE_T_K;
        //  Stiffness frame pose in end effector frame # Vectorized 4x4, column-major
        public double time;
        public const byte ROBOT_MODE_OTHER = 0;
        public const byte ROBOT_MODE_IDLE = 1;
        public const byte ROBOT_MODE_MOVE = 2;
        public const byte ROBOT_MODE_GUIDING = 3;
        public const byte ROBOT_MODE_REFLEX = 4;
        public const byte ROBOT_MODE_USER_STOPPED = 5;
        public const byte ROBOT_MODE_AUTOMATIC_ERROR_RECOVERY = 6;
        public byte robot_mode;
        public Franka.ErrorsMsg current_errors;
        public Franka.ErrorsMsg last_motion_errors;

        public RobotStateMsg()
        {
            this.header = new Std.HeaderMsg();
            this.cartesian_collision = new double[6];
            this.cartesian_contact = new double[6];
            this.O_dP_EE = new double[6];
            this.q_d = new double[7];
            this.dq_d = new double[7];
            this.dtau_J = new double[7];
            this.tau_J_d = new double[7];
            this.joint_collision = new double[7];
            this.joint_contact = new double[7];
            this.tau_ext_hat_filtered = new double[7];
            this.F_x_Cee = new double[3];
            this.F_x_Cload = new double[3];
            this.F_x_Ctotal = new double[3];
            this.I_ee = new double[9];
            this.I_load = new double[9];
            this.I_total = new double[9];
            this.m_ee = 0.0;
            this.m_load = 0.0;
            this.m_total = 0.0;
            this.gravity = new double[7];
            this.coriolis = new double[7];
            this.mass_matrix = new double[49];
            this.O_Jac_EE = new double[42];
            this.O_T_EE_d = new double[16];
            this.F_T_EE = new double[16];
            this.EE_T_K = new double[16];
            this.time = 0.0;
            this.robot_mode = 0;
            this.current_errors = new Franka.ErrorsMsg();
            this.last_motion_errors = new Franka.ErrorsMsg();
        }

        public RobotStateMsg(Std.HeaderMsg header, double[] cartesian_collision, double[] cartesian_contact, double[] O_dP_EE, double[] q_d, double[] dq_d, double[] dtau_J, double[] tau_J_d, double[] joint_collision, double[] joint_contact, double[] tau_ext_hat_filtered, double[] F_x_Cee, double[] F_x_Cload, double[] F_x_Ctotal, double[] I_ee, double[] I_load, double[] I_total, double m_ee, double m_load, double m_total, double[] gravity, double[] coriolis, double[] mass_matrix, double[] O_Jac_EE, double[] O_T_EE_d, double[] F_T_EE, double[] EE_T_K, double time, byte robot_mode, Franka.ErrorsMsg current_errors, Franka.ErrorsMsg last_motion_errors)
        {
            this.header = header;
            this.cartesian_collision = cartesian_collision;
            this.cartesian_contact = cartesian_contact;
            this.O_dP_EE = O_dP_EE;
            this.q_d = q_d;
            this.dq_d = dq_d;
            this.dtau_J = dtau_J;
            this.tau_J_d = tau_J_d;
            this.joint_collision = joint_collision;
            this.joint_contact = joint_contact;
            this.tau_ext_hat_filtered = tau_ext_hat_filtered;
            this.F_x_Cee = F_x_Cee;
            this.F_x_Cload = F_x_Cload;
            this.F_x_Ctotal = F_x_Ctotal;
            this.I_ee = I_ee;
            this.I_load = I_load;
            this.I_total = I_total;
            this.m_ee = m_ee;
            this.m_load = m_load;
            this.m_total = m_total;
            this.gravity = gravity;
            this.coriolis = coriolis;
            this.mass_matrix = mass_matrix;
            this.O_Jac_EE = O_Jac_EE;
            this.O_T_EE_d = O_T_EE_d;
            this.F_T_EE = F_T_EE;
            this.EE_T_K = EE_T_K;
            this.time = time;
            this.robot_mode = robot_mode;
            this.current_errors = current_errors;
            this.last_motion_errors = last_motion_errors;
        }

        public static RobotStateMsg Deserialize(MessageDeserializer deserializer) => new RobotStateMsg(deserializer);

        private RobotStateMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.cartesian_collision, sizeof(double), 6);
            deserializer.Read(out this.cartesian_contact, sizeof(double), 6);
            deserializer.Read(out this.O_dP_EE, sizeof(double), 6);
            deserializer.Read(out this.q_d, sizeof(double), 7);
            deserializer.Read(out this.dq_d, sizeof(double), 7);
            deserializer.Read(out this.dtau_J, sizeof(double), 7);
            deserializer.Read(out this.tau_J_d, sizeof(double), 7);
            deserializer.Read(out this.joint_collision, sizeof(double), 7);
            deserializer.Read(out this.joint_contact, sizeof(double), 7);
            deserializer.Read(out this.tau_ext_hat_filtered, sizeof(double), 7);
            deserializer.Read(out this.F_x_Cee, sizeof(double), 3);
            deserializer.Read(out this.F_x_Cload, sizeof(double), 3);
            deserializer.Read(out this.F_x_Ctotal, sizeof(double), 3);
            deserializer.Read(out this.I_ee, sizeof(double), 9);
            deserializer.Read(out this.I_load, sizeof(double), 9);
            deserializer.Read(out this.I_total, sizeof(double), 9);
            deserializer.Read(out this.m_ee);
            deserializer.Read(out this.m_load);
            deserializer.Read(out this.m_total);
            deserializer.Read(out this.gravity, sizeof(double), 7);
            deserializer.Read(out this.coriolis, sizeof(double), 7);
            deserializer.Read(out this.mass_matrix, sizeof(double), 49);
            deserializer.Read(out this.O_Jac_EE, sizeof(double), 42);
            deserializer.Read(out this.O_T_EE_d, sizeof(double), 16);
            deserializer.Read(out this.F_T_EE, sizeof(double), 16);
            deserializer.Read(out this.EE_T_K, sizeof(double), 16);
            deserializer.Read(out this.time);
            deserializer.Read(out this.robot_mode);
            this.current_errors = Franka.ErrorsMsg.Deserialize(deserializer);
            this.last_motion_errors = Franka.ErrorsMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.cartesian_collision);
            serializer.Write(this.cartesian_contact);
            serializer.Write(this.O_dP_EE);
            serializer.Write(this.q_d);
            serializer.Write(this.dq_d);
            serializer.Write(this.dtau_J);
            serializer.Write(this.tau_J_d);
            serializer.Write(this.joint_collision);
            serializer.Write(this.joint_contact);
            serializer.Write(this.tau_ext_hat_filtered);
            serializer.Write(this.F_x_Cee);
            serializer.Write(this.F_x_Cload);
            serializer.Write(this.F_x_Ctotal);
            serializer.Write(this.I_ee);
            serializer.Write(this.I_load);
            serializer.Write(this.I_total);
            serializer.Write(this.m_ee);
            serializer.Write(this.m_load);
            serializer.Write(this.m_total);
            serializer.Write(this.gravity);
            serializer.Write(this.coriolis);
            serializer.Write(this.mass_matrix);
            serializer.Write(this.O_Jac_EE);
            serializer.Write(this.O_T_EE_d);
            serializer.Write(this.F_T_EE);
            serializer.Write(this.EE_T_K);
            serializer.Write(this.time);
            serializer.Write(this.robot_mode);
            serializer.Write(this.current_errors);
            serializer.Write(this.last_motion_errors);
        }

        public override string ToString()
        {
            return "RobotStateMsg: " +
            "\nheader: " + header.ToString() +
            "\ncartesian_collision: " + System.String.Join(", ", cartesian_collision.ToList()) +
            "\ncartesian_contact: " + System.String.Join(", ", cartesian_contact.ToList()) +
            "\nO_dP_EE: " + System.String.Join(", ", O_dP_EE.ToList()) +
            "\nq_d: " + System.String.Join(", ", q_d.ToList()) +
            "\ndq_d: " + System.String.Join(", ", dq_d.ToList()) +
            "\ndtau_J: " + System.String.Join(", ", dtau_J.ToList()) +
            "\ntau_J_d: " + System.String.Join(", ", tau_J_d.ToList()) +
            "\njoint_collision: " + System.String.Join(", ", joint_collision.ToList()) +
            "\njoint_contact: " + System.String.Join(", ", joint_contact.ToList()) +
            "\ntau_ext_hat_filtered: " + System.String.Join(", ", tau_ext_hat_filtered.ToList()) +
            "\nF_x_Cee: " + System.String.Join(", ", F_x_Cee.ToList()) +
            "\nF_x_Cload: " + System.String.Join(", ", F_x_Cload.ToList()) +
            "\nF_x_Ctotal: " + System.String.Join(", ", F_x_Ctotal.ToList()) +
            "\nI_ee: " + System.String.Join(", ", I_ee.ToList()) +
            "\nI_load: " + System.String.Join(", ", I_load.ToList()) +
            "\nI_total: " + System.String.Join(", ", I_total.ToList()) +
            "\nm_ee: " + m_ee.ToString() +
            "\nm_load: " + m_load.ToString() +
            "\nm_total: " + m_total.ToString() +
            "\ngravity: " + System.String.Join(", ", gravity.ToList()) +
            "\ncoriolis: " + System.String.Join(", ", coriolis.ToList()) +
            "\nmass_matrix: " + System.String.Join(", ", mass_matrix.ToList()) +
            "\nO_Jac_EE: " + System.String.Join(", ", O_Jac_EE.ToList()) +
            "\nO_T_EE_d: " + System.String.Join(", ", O_T_EE_d.ToList()) +
            "\nF_T_EE: " + System.String.Join(", ", F_T_EE.ToList()) +
            "\nEE_T_K: " + System.String.Join(", ", EE_T_K.ToList()) +
            "\ntime: " + time.ToString() +
            "\nrobot_mode: " + robot_mode.ToString() +
            "\ncurrent_errors: " + current_errors.ToString() +
            "\nlast_motion_errors: " + last_motion_errors.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
