//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.FrankaPositionServo
{
    [Serializable]
    public class JointLimitsMsg : Message
    {
        public const string k_RosMessageName = "franka_position_servo/JointLimits";
        public override string RosMessageName => k_RosMessageName;

        //  names of the joints
        public string[] joint_names;
        //  lower bound on the angular position in radians
        public double[] position_lower;
        //  upper bound on the angular position in radians
        public double[] position_upper;
        //  symmetric maximum joint velocity in radians/second
        public double[] velocity;
        //  symmetric maximum joint acceleration in radians/second^2
        public double[] accel;
        //  symmetric maximum joint torque in Newton-meters
        public double[] effort;

        public JointLimitsMsg()
        {
            this.joint_names = new string[0];
            this.position_lower = new double[0];
            this.position_upper = new double[0];
            this.velocity = new double[0];
            this.accel = new double[0];
            this.effort = new double[0];
        }

        public JointLimitsMsg(string[] joint_names, double[] position_lower, double[] position_upper, double[] velocity, double[] accel, double[] effort)
        {
            this.joint_names = joint_names;
            this.position_lower = position_lower;
            this.position_upper = position_upper;
            this.velocity = velocity;
            this.accel = accel;
            this.effort = effort;
        }

        public static JointLimitsMsg Deserialize(MessageDeserializer deserializer) => new JointLimitsMsg(deserializer);

        private JointLimitsMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.joint_names, deserializer.ReadLength());
            deserializer.Read(out this.position_lower, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.position_upper, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.velocity, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.accel, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.effort, sizeof(double), deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.WriteLength(this.joint_names);
            serializer.Write(this.joint_names);
            serializer.WriteLength(this.position_lower);
            serializer.Write(this.position_lower);
            serializer.WriteLength(this.position_upper);
            serializer.Write(this.position_upper);
            serializer.WriteLength(this.velocity);
            serializer.Write(this.velocity);
            serializer.WriteLength(this.accel);
            serializer.Write(this.accel);
            serializer.WriteLength(this.effort);
            serializer.Write(this.effort);
        }

        public override string ToString()
        {
            return "JointLimitsMsg: " +
            "\njoint_names: " + System.String.Join(", ", joint_names.ToList()) +
            "\nposition_lower: " + System.String.Join(", ", position_lower.ToList()) +
            "\nposition_upper: " + System.String.Join(", ", position_upper.ToList()) +
            "\nvelocity: " + System.String.Join(", ", velocity.ToList()) +
            "\naccel: " + System.String.Join(", ", accel.ToList()) +
            "\neffort: " + System.String.Join(", ", effort.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
